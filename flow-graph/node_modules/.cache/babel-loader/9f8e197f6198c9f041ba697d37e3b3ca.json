{"remainingRequest":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/babel-loader/lib/index.js!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/eslint-loader/index.js??ref--13-0!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/src/solvingAlgo/loops.js","dependencies":[{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/src/solvingAlgo/loops.js","mtime":1619561907114},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwovL0ZpbmRMb29wcyBpcyB0aGUgbWFpbiBmdW5jdGlvbiwgVGhhdHMgdGhlIG9uZSB5b3UgYXJlIGdvbm5hIGNhbGwgYW5kIGl0IHdpbGwgcmV0dXJuIHlvdSB0aGUgSlNPTiBvYmplY3QKZXhwb3J0IGZ1bmN0aW9uIEZpbmRMb29wcyhBZGphY2VuY3lNYXRyaXgpIHsKICB2YXIgTG9vcHNBcnJheSA9IFtdOwogIHZhciBHYWluc0FycmF5ID0gW107CiAgdmFyIGN1cnJlbnRQYXRoID0gW107CiAgdmFyIHZpc2l0ZWQgPSBbXTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBBZGphY2VuY3lNYXRyaXgubGVuZ3RoOyBpKyspIHsKICAgIHZpc2l0ZWQucHVzaChmYWxzZSk7CiAgfQoKICBmb3IgKHZhciBub2RlID0gMDsgbm9kZSA8IEFkamFjZW5jeU1hdHJpeC5sZW5ndGg7IG5vZGUrKykgewogICAgaWYgKHZpc2l0ZWRbbm9kZV0gPT0gZmFsc2UpIHsKICAgICAgRmluZExvb3BzUmVjdXJzaW9uKEFkamFjZW5jeU1hdHJpeCwgbm9kZSwgY3VycmVudFBhdGgsIHZpc2l0ZWQsIExvb3BzQXJyYXksIEdhaW5zQXJyYXkpOwogICAgfQogIH0KCiAgdmFyIGxvb3BzX29iaiA9IHsKICAgIGxvb3BzOiBMb29wc0FycmF5LAogICAgZ2FpbnM6IEdhaW5zQXJyYXkKICB9OwogIHJldHVybiBsb29wc19vYmo7Cn0KCmZ1bmN0aW9uIEZpbmRMb29wc1JlY3Vyc2lvbihBZGphY2VuY3lNYXRyaXgsIGN1cnJlbnROb2RlLCBjdXJyZW50UGF0aCwgdmlzaXRlZCwgTG9vcHNBcnJheSwgR2FpbnNBcnJheSkgewogIHZpc2l0ZWRbY3VycmVudE5vZGVdID0gdHJ1ZTsKICBjdXJyZW50UGF0aC5wdXNoKGN1cnJlbnROb2RlKTsKCiAgZm9yICh2YXIgb3RoZXJOb2RlcyA9IDA7IG90aGVyTm9kZXMgPCBBZGphY2VuY3lNYXRyaXgubGVuZ3RoOyBvdGhlck5vZGVzKyspIHsKICAgIGlmIChBZGphY2VuY3lNYXRyaXhbY3VycmVudE5vZGVdW290aGVyTm9kZXNdICE9IDApIHsKICAgICAgaWYgKGN1cnJlbnRQYXRoLmluY2x1ZGVzKG90aGVyTm9kZXMpKSB7CiAgICAgICAgbG9vcCA9IFtdOwogICAgICAgIGdhaW4gPSAxOwoKICAgICAgICBmb3IgKHZhciBpID0gY3VycmVudFBhdGguaW5kZXhPZihvdGhlck5vZGVzKTsgaSA8IGN1cnJlbnRQYXRoLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBsb29wLnB1c2goY3VycmVudFBhdGhbaV0pOwogICAgICAgIH0KCiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBsb29wLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICBnYWluID0gZ2FpbiAqIEFkamFjZW5jeU1hdHJpeFtsb29wW2pdXVtsb29wWyhqICsgMSkgJSBsb29wLmxlbmd0aF1dOwogICAgICAgIH0KCiAgICAgICAgbG9vcC5wdXNoKG90aGVyTm9kZXMpOwogICAgICAgIEFkZExvb3AobG9vcCwgZ2FpbiwgTG9vcHNBcnJheSwgR2FpbnNBcnJheSk7CiAgICAgIH0KCiAgICAgIGlmICghY3VycmVudFBhdGguaW5jbHVkZXMob3RoZXJOb2RlcykpIEZpbmRMb29wc1JlY3Vyc2lvbihBZGphY2VuY3lNYXRyaXgsIG90aGVyTm9kZXMsIGN1cnJlbnRQYXRoLCB2aXNpdGVkLCBMb29wc0FycmF5LCBHYWluc0FycmF5KTsKICAgIH0KICB9CgogIGN1cnJlbnRQYXRoLnBvcCgpOwp9CgpmdW5jdGlvbiBBZGRMb29wKGxvb3AsIGdhaW4sIExvb3BzQXJyYXksIEdhaW5zQXJyYXkpIHsKICBsb29wRXhpc3RzID0gZmFsc2U7CgogIGZvciAodmFyIGkgPSAwOyBpIDwgTG9vcHNBcnJheS5sZW5ndGg7IGkrKykgewogICAgaWYgKGxvb3AubGVuZ3RoID09IExvb3BzQXJyYXlbaV0ubGVuZ3RoICYmIGdhaW4gPT0gR2FpbnNBcnJheVtpXSkgewogICAgICBkZWxheSA9IExvb3BzQXJyYXlbaV0uaW5kZXhPZihsb29wWzBdKTsKCiAgICAgIGlmIChkZWxheSAhPSAtMSkgewogICAgICAgIGxvb3BFeGlzdHMgPSB0cnVlOwoKICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGxvb3AubGVuZ3RoIC0gMTsgaisrKSB7CiAgICAgICAgICBpZiAobG9vcFtqXSAhPSBMb29wc0FycmF5W2ldWyhqICsgZGVsYXkpICUgKExvb3BzQXJyYXlbaV0ubGVuZ3RoIC0gMSldKSB7CiAgICAgICAgICAgIGxvb3BFeGlzdHMgPSBmYWxzZTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgaWYgKGxvb3BFeGlzdHMpIHsKICAgICAgcmV0dXJuOwogICAgfQogIH0KCiAgTG9vcHNBcnJheS5wdXNoKGxvb3ApOwogIEdhaW5zQXJyYXkucHVzaChnYWluKTsKfSAvLyB0ZXN0IGZ1bmN0aW9uIHRvIHRlc3QgdGhlIG91dHB1dAovLyBmdW5jdGlvbiBUZXN0KCl7Ci8vIAlBZGphY2VuY3lNYXRyaXhUZXN0PVsJW1swLDEsMCwwLDEsMCwwLDEsMF0sCi8vIAkJCQkJCQkgWzAsMCwxLDAsMCwwLDEsMCwxXSwKLy8gCQkJCQkJCSBbMSwxLDAsMSwwLDEsMCwwLDBdLAovLyAJCQkJCQkJIFswLDAsMCwwLDEsMCwwLDAsMF0sCi8vIAkJCQkJCQkgWzAsMSwwLDAsMCwwLDAsMCwwXSwKLy8gCQkJCQkJCSBbMCwwLDAsMSwwLDAsMCwwLDBdLAovLyAJCQkJCQkJIFswLDAsMCwwLDAsMCwwLDAsMF0sCi8vIAkJCQkJCQkgWzAsMCwwLDAsMCwwLDAsMCwxXSwKLy8gCQkJCQkJCSBbMCwwLDAsMCwwLDAsMCwxLDBdXQovLyAJCQkJCQkJICwKLy8gCQkJCQkJCVtbNCw0XSwKLy8gCQkJCQkJCSBbMywzXV0KLy8gCQkJCQkJCSAsCi8vIAkJCQkJCQlbWzAsMSw0LDBdLAovLyAJCQkJCQkJIFswLDAsMiw1XSwKLy8gCQkJCQkJCSBbMCw2LDAsM10sCi8vIAkJCQkJCQkgWzAsMCwwLDBdXQovLyAJCQkJCQkJICwKLy8gCQkJCQkJCVtbNSwyLDNdLAovLyAJCQkJCQkJIFsyLDMsMl0sCi8vIAkJCQkJCQkgWzMsMywyXV0KLy8gCQkJCQkJCSAsCi8vIAkJCQkJCQlbWzAsMSwxLDEsMF0sCi8vIAkJCQkJCQkgWzAsMCwxLDAsMF0sCi8vIAkJCQkJCQkgWzAsMSwwLDAsMF0sCi8vIAkJCQkJCQkgWzAsMCwwLDEsMF0sCi8vIAkJCQkJCQkgWzAsMSwwLDAsMF0KLy8gCQkJCQkJCSBdCi8vIAkJCQkJCQkgLAovLyAJCQkJCQkJW1swLDEsMSwwLDBdLAovLyAJCQkJCQkJIFswLDAsMSwwLDFdLAovLyAJCQkJCQkJIFswLDAsMCwxLDBdLAovLyAJCQkJCQkJIFswLDAsMCwwLDFdLAovLyAJCQkJCQkJIFswLDAsMCwwLDBdXQovLyAJCQkJCQkJICwKLy8gCQkJCQkJCSBbWzAsMCwxLDAsMCwxLDAsMCwwXSwKLy8gCQkJCQkJCSAgWzAsMCwwLDAsMCwwLDEsMCwwXSwKLy8gCQkJCQkJCSAgWzAsMCwwLDAsMCwwLDEsMCwwXSwKLy8gCQkJCQkJCSAgWzAsMCwwLDAsMSwwLDAsMCwwXSwKLy8gCQkJCQkJCSAgWzAsMCwwLDAsMCwxLDAsMCwwXSwKLy8gCQkJCQkJCSAgWzAsMCwwLDEsMCwwLDAsMSwwXSwKLy8gCQkJCQkJCSAgWzAsMCwwLDAsMCwwLDAsMCwwXSwKLy8gCQkJCQkJCSAgWzAsMCwxLDAsMCwwLDAsMCwxXSwKLy8gCQkJCQkJCSAgWzAsMCwwLDAsMCwwLDAsMCwwXV0KLy8gCQkJCQkJCSAgLAovLyAJCQkJCQkJICBbWzAsMiwwLDAsMCwwLDAsMF0sCi8vIAkJCQkJCQkgICBbMCwwLDUsMCwwLDAsMCwwXSwKLy8gCQkJCQkJCSAgIFswLDAsMCw3LDAsMCwwLDBdLAovLyAJCQkJCQkJICAgWzAsMCwyMCwwLDksMCwwLDBdLAovLyAJCQkJCQkJICAgWzAsMCwwLDAsNywxOCwwLDBdLAovLyAJCQkJCQkJICAgWzAsMywwLDAsMCwwLDIsMF0sCi8vIAkJCQkJCQkgICBbMCwwLDAsMCwwLDAsMCw2XSwKLy8gCQkJCQkJCSAgIFswLDAsMCwwLDAsMCwwLDBdXQovLyAJCQkJCQkJIC8vQWRkIG1vcmUgdGVzdHMgaGVyZQovLyAJCQkJCQkJIF0KLy8gCWZvcih2YXIgaT0wO2k8QWRqYWNlbmN5TWF0cml4VGVzdC5sZW5ndGg7aSsrKXsKLy8gCQljb25zb2xlLmxvZyhGaW5kTG9vcHMoQWRqYWNlbmN5TWF0cml4VGVzdFtpXSkpCi8vIAl9Ci8vIH0="},{"version":3,"sources":["/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/src/solvingAlgo/loops.js"],"names":["FindLoops","AdjacencyMatrix","LoopsArray","GainsArray","currentPath","visited","i","length","push","node","FindLoopsRecursion","loops_obj","loops","gains","currentNode","otherNodes","includes","loop","gain","indexOf","j","AddLoop","pop","loopExists","delay"],"mappings":"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IAAI,CAACG,CAAD,CAAJ,IAASlB,UAAU,CAACI,CAAD,CAAV,CAAc,CAACc,CAAC,GAACI,KAAH,KAAWtB,UAAU,CAACI,CAAD,CAAV,CAAcC,MAAd,GAAqB,CAAhC,CAAd,CAAZ,EAA8D;AAC7DgB,YAAAA,UAAU,GAAC,KAAX;AACA;AACA;AACD;AACD;AACD;;AACD,QAAGA,UAAH,EAAc;AACb;AACA;AACD;;AACDrB,EAAAA,UAAU,CAACM,IAAX,CAAgBS,IAAhB;AACAd,EAAAA,UAAU,CAACK,IAAX,CAAgBU,IAAhB;AACA,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//FindLoops is the main function, Thats the one you are gonna call and it will return you the JSON object\r\nexport function FindLoops(AdjacencyMatrix){\r\n\t\tlet LoopsArray=[]\r\n\t\tlet GainsArray=[]\r\n\t\tlet currentPath=[]\r\n\t\tlet visited = []\r\n\t\tfor(let i=0 ; i<AdjacencyMatrix.length;i++){\r\n\t\t\tvisited.push(false)\r\n\t\t}\r\n\t\tfor(let node=0;node<AdjacencyMatrix.length;node++){\r\n\t\t\tif(visited[node]==false){\r\n\t\t\t\tFindLoopsRecursion(AdjacencyMatrix,node,currentPath,visited,LoopsArray,GainsArray)\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst loops_obj={\r\n\t\t\tloops:LoopsArray,\r\n\t\t\tgains:GainsArray\r\n\t\t}\r\n\t\treturn loops_obj\r\n\t}\r\n\r\n\tfunction FindLoopsRecursion(AdjacencyMatrix,currentNode,currentPath,visited,LoopsArray,GainsArray){\r\n\t\tvisited[currentNode]=true\r\n\t\tcurrentPath.push(currentNode)\r\n\t\tfor(let otherNodes=0;otherNodes<AdjacencyMatrix.length;otherNodes++){\r\n\t\t\tif(AdjacencyMatrix[currentNode][otherNodes]!=0){\r\n\t\t\t\tif(currentPath.includes(otherNodes)){\r\n\t\t\t\t\tloop=[]\r\n\t\t\t\t\tgain=1\r\n\t\t\t\t\tfor(let i=currentPath.indexOf(otherNodes);i<currentPath.length;i++){\r\n\t\t\t\t\t\tloop.push(currentPath[i])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(let j=0;j<loop.length;j++){\r\n\t\t\t\t\t\tgain=gain*AdjacencyMatrix[loop[j]][loop[(j+1)%loop.length]]\r\n\t\t\t\t\t}\r\n\t\t\t\t\tloop.push(otherNodes)\r\n\t\t\t\t\tAddLoop(loop,gain,LoopsArray,GainsArray)\r\n\t\t\t\t}\r\n\t\t\t\tif(!currentPath.includes(otherNodes))\r\n\t\t\t\t\tFindLoopsRecursion(AdjacencyMatrix,otherNodes,currentPath,visited,LoopsArray,GainsArray)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcurrentPath.pop()\r\n\t}\r\n\tfunction AddLoop(loop,gain,LoopsArray,GainsArray){\r\n\t\tloopExists=false\r\n\t\tfor(let i=0;i<LoopsArray.length;i++){\r\n\t\t\tif(loop.length==LoopsArray[i].length && gain==GainsArray[i]){\r\n\t\t\t\tdelay=LoopsArray[i].indexOf(loop[0])\r\n\t\t\t\tif(delay!=-1){\r\n\t\t\t\t\tloopExists=true\r\n\t\t\t\t\tfor(let j=0;j<loop.length-1;j++){\r\n\t\t\t\t\t\tif(loop[j]!=LoopsArray[i][(j+delay)%(LoopsArray[i].length-1)]){\r\n\t\t\t\t\t\t\tloopExists=false\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(loopExists){\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t\tLoopsArray.push(loop)\r\n\t\tGainsArray.push(gain)\r\n\t}\r\n\t// test function to test the output\r\n\t// function Test(){\r\n\t// \tAdjacencyMatrixTest=[\t[[0,1,0,0,1,0,0,1,0],\r\n\t// \t\t\t\t\t\t\t [0,0,1,0,0,0,1,0,1],\r\n\t// \t\t\t\t\t\t\t [1,1,0,1,0,1,0,0,0],\r\n\t// \t\t\t\t\t\t\t [0,0,0,0,1,0,0,0,0],\r\n\t// \t\t\t\t\t\t\t [0,1,0,0,0,0,0,0,0],\r\n\t// \t\t\t\t\t\t\t [0,0,0,1,0,0,0,0,0],\r\n\t// \t\t\t\t\t\t\t [0,0,0,0,0,0,0,0,0],\r\n\t// \t\t\t\t\t\t\t [0,0,0,0,0,0,0,0,1],\r\n\t// \t\t\t\t\t\t\t [0,0,0,0,0,0,0,1,0]]\r\n\t// \t\t\t\t\t\t\t ,\r\n\t// \t\t\t\t\t\t\t[[4,4],\r\n\t// \t\t\t\t\t\t\t [3,3]]\r\n\t// \t\t\t\t\t\t\t ,\r\n\t// \t\t\t\t\t\t\t[[0,1,4,0],\r\n\t// \t\t\t\t\t\t\t [0,0,2,5],\r\n\t// \t\t\t\t\t\t\t [0,6,0,3],\r\n\t// \t\t\t\t\t\t\t [0,0,0,0]]\r\n\t// \t\t\t\t\t\t\t ,\r\n\t// \t\t\t\t\t\t\t[[5,2,3],\r\n\t// \t\t\t\t\t\t\t [2,3,2],\r\n\t// \t\t\t\t\t\t\t [3,3,2]]\r\n\t// \t\t\t\t\t\t\t ,\r\n\t// \t\t\t\t\t\t\t[[0,1,1,1,0],\r\n\t// \t\t\t\t\t\t\t [0,0,1,0,0],\r\n\t// \t\t\t\t\t\t\t [0,1,0,0,0],\r\n\t// \t\t\t\t\t\t\t [0,0,0,1,0],\r\n\t// \t\t\t\t\t\t\t [0,1,0,0,0]\r\n\t// \t\t\t\t\t\t\t ]\r\n\t// \t\t\t\t\t\t\t ,\r\n\t// \t\t\t\t\t\t\t[[0,1,1,0,0],\r\n\t// \t\t\t\t\t\t\t [0,0,1,0,1],\r\n\t// \t\t\t\t\t\t\t [0,0,0,1,0],\r\n\t// \t\t\t\t\t\t\t [0,0,0,0,1],\r\n\t// \t\t\t\t\t\t\t [0,0,0,0,0]]\r\n\t// \t\t\t\t\t\t\t ,\r\n\t// \t\t\t\t\t\t\t [[0,0,1,0,0,1,0,0,0],\r\n\t// \t\t\t\t\t\t\t  [0,0,0,0,0,0,1,0,0],\r\n\t// \t\t\t\t\t\t\t  [0,0,0,0,0,0,1,0,0],\r\n\t// \t\t\t\t\t\t\t  [0,0,0,0,1,0,0,0,0],\r\n\t// \t\t\t\t\t\t\t  [0,0,0,0,0,1,0,0,0],\r\n\t// \t\t\t\t\t\t\t  [0,0,0,1,0,0,0,1,0],\r\n\t// \t\t\t\t\t\t\t  [0,0,0,0,0,0,0,0,0],\r\n\t// \t\t\t\t\t\t\t  [0,0,1,0,0,0,0,0,1],\r\n\t// \t\t\t\t\t\t\t  [0,0,0,0,0,0,0,0,0]]\r\n\t// \t\t\t\t\t\t\t  ,\r\n\t// \t\t\t\t\t\t\t  [[0,2,0,0,0,0,0,0],\r\n\t// \t\t\t\t\t\t\t   [0,0,5,0,0,0,0,0],\r\n\t// \t\t\t\t\t\t\t   [0,0,0,7,0,0,0,0],\r\n\t// \t\t\t\t\t\t\t   [0,0,20,0,9,0,0,0],\r\n\t// \t\t\t\t\t\t\t   [0,0,0,0,7,18,0,0],\r\n\t// \t\t\t\t\t\t\t   [0,3,0,0,0,0,2,0],\r\n\t// \t\t\t\t\t\t\t   [0,0,0,0,0,0,0,6],\r\n\t// \t\t\t\t\t\t\t   [0,0,0,0,0,0,0,0]]\r\n\t// \t\t\t\t\t\t\t //Add more tests here\r\n\t// \t\t\t\t\t\t\t ]\r\n\t// \tfor(var i=0;i<AdjacencyMatrixTest.length;i++){\r\n\t// \t\tconsole.log(FindLoops(AdjacencyMatrixTest[i]))\r\n\t// \t}\r\n\t// }\r\n"]}]}