{"remainingRequest":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/babel-loader/lib/index.js!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/src/components/header/solveSection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/src/components/header/solveSection.vue","mtime":1619563165880},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9Vc2Vycy9hbGloYXNzYW4vVGhlX0xPTC9Qcm9qZWN0cy9jb2xsYWdlX3JlbGF0ZWQvU2Vjb25kWWVhci9Db250cm9sX1N5c3RlbXMvc2lnbmFsLWZsb3ctZ3JhcGgtc29sdmVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWxsLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgeyBzb2x2ZWZvcndhcmRwYXRoIH0gZnJvbSAiLi4vLi4vc29sdmluZ0FsZ28vZm9yd2FyZF9wYXRocy5qcyI7CmltcG9ydCB7IGZpbmRMb29wcyB9IGZyb20gIi4uLy4uL3NvbHZpbmdBbGdvL2xvb3BzLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdzb2x2ZScsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG5vZGVOdW06IDAKICAgIH07CiAgfSwKICBjb21wdXRlZDogbWFwR2V0dGVycyhbJ25vZGVzJ10pLAogIGhlYWQ6IHsKICAgIHNjcmlwdDogW3sKICAgICAgc3JjOiAnaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvbWF0aGpheC8yLjcuMi9NYXRoSmF4LmpzP2NvbmZpZz1UZVgtQU1TX0hUTUwnCiAgICB9XQogIH0sCiAgbWV0aG9kczogewogICAgdHJpZ2dlclNvbHZlOiBmdW5jdGlvbiB0cmlnZ2VyU29sdmUoKSB7CiAgICAgIC8vIGNvbnN0IGdyYXBoSW5mbyA9IHRoaXMuZ2V0R3JhcGhJbmZvKCk7CiAgICAgIHZhciBncmFwaEluZm8gPSBbWzAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDBdLCBbMCwgMCwgMSwgMCwgMCwgMCwgMSwgMCwgMV0sIFsxLCAxLCAwLCAxLCAwLCAxLCAwLCAwLCAwXSwgWzAsIDAsIDAsIDAsIDEsIDAsIDAsIDAsIDBdLCBbMCwgMSwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sIFswLCAwLCAwLCAxLCAwLCAwLCAwLCAwLCAwXSwgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLCBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMV0sIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAxLCAwXV07CiAgICAgIHRoaXMubm9kZU51bSA9IGdyYXBoSW5mby5sZW5ndGg7CiAgICAgIHZhciBmb3J3YXJkUGF0aHMgPSBzb2x2ZWZvcndhcmRwYXRoKGdyYXBoSW5mbyk7CiAgICAgIHZhciBsb29wcyA9IGZpbmRMb29wcyhncmFwaEluZm8pOwogICAgICBjb25zb2xlLmxvZyhmb3J3YXJkUGF0aHMpOwogICAgICBjb25zb2xlLmxvZyhsb29wcyk7CiAgICAgIHRoaXMub3BlblNvbHV0aW9uQXJlYSgpOwogICAgICB0aGlzLnNob3dTb2x1dGlvbihmb3J3YXJkUGF0aHMsIGxvb3BzKTsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImJvYXJkIikuc3R5bGUucG9pbnRlckV2ZW50cyA9ICdub25lJzsKICAgIH0sCiAgICBnZXRHcmFwaEluZm86IGZ1bmN0aW9uIGdldEdyYXBoSW5mbygpIHsKICAgICAgdmFyIG1hdHJpeFNpemUgPSB0aGlzLm5vZGVzLnNpemU7CiAgICAgIHZhciBncmFwaEluZm8gPSBuZXcgQXJyYXkobWF0cml4U2l6ZSk7CgogICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5ub2Rlcy52YWx1ZXMoKSksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBub2RlID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICBub2RlLnVuc2VsZWN0U2VsZigpOwogICAgICAgICAgdmFyIG91dGNvbWluZ0JyYW5jaGVzID0gbm9kZS50b0Nvbm5lY3Rpb25Qb2ludC5vdXRDb25uZWN0b3JzLnZhbHVlcygpOwogICAgICAgICAgdmFyIG5vZGVfbm9kZUdhaW5zID0gbmV3IEFycmF5KG1hdHJpeFNpemUpLmZpbGwoMCk7CiAgICAgICAgICB2YXIgdG9Ob2RlSW5kZXggPSAwOwoKICAgICAgICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIob3V0Y29taW5nQnJhbmNoZXMpLAogICAgICAgICAgICAgIF9zdGVwMjsKCiAgICAgICAgICB0cnkgewogICAgICAgICAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykgewogICAgICAgICAgICAgIHZhciBicmFuY2ggPSBfc3RlcDIudmFsdWU7CiAgICAgICAgICAgICAgaWYgKGJyYW5jaC50by5pc091dHB1dE5vZGUpIHRvTm9kZUluZGV4ID0gbWF0cml4U2l6ZSAtIDE7ZWxzZSB0b05vZGVJbmRleCA9IGJyYW5jaC50by5jb2RlOwogICAgICAgICAgICAgIG5vZGVfbm9kZUdhaW5zW3RvTm9kZUluZGV4XSA9IGJyYW5jaC5nYWluOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgX2l0ZXJhdG9yMi5lKGVycik7CiAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICBfaXRlcmF0b3IyLmYoKTsKICAgICAgICAgIH0KCiAgICAgICAgICB2YXIgbm9kZUluZGV4ID0gMDsKICAgICAgICAgIGlmIChub2RlLmlzSW5wdXROb2RlKSBub2RlSW5kZXggPSAwO2Vsc2UgaWYgKG5vZGUuaXNPdXRwdXROb2RlKSBub2RlSW5kZXggPSBtYXRyaXhTaXplIC0gMTtlbHNlIG5vZGVJbmRleCA9IG5vZGUuY29kZTsKICAgICAgICAgIGdyYXBoSW5mb1tub2RlSW5kZXhdID0gbm9kZV9ub2RlR2FpbnM7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvci5mKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBncmFwaEluZm87CiAgICB9LAogICAgc2hvd1NvbHV0aW9uOiBmdW5jdGlvbiBzaG93U29sdXRpb24oZm9yd2FyZFBhdGhzLCBncmFwaExvb3BzKSB7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdGVwcyIpLmlubmVySFRNTCA9ICIiOwogICAgICB0aGlzLmFkZFRpdGxlKCJGb3J3YXJkIHBhdGhzOiIpOwogICAgICB2YXIgcGF0aEluZGV4ID0gMTsKCiAgICAgIHZhciBfaXRlcmF0b3IzID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZm9yd2FyZFBhdGhzLnBhdGhzKSwKICAgICAgICAgIF9zdGVwMzsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IzLnMoKTsgIShfc3RlcDMgPSBfaXRlcmF0b3IzLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBwYXRoID0gX3N0ZXAzLnZhbHVlOwogICAgICAgICAgdGhpcy5hZGRQYXRoKHBhdGgsIHBhdGhJbmRleCsrKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvcjMuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvcjMuZigpOwogICAgICB9CgogICAgICB0aGlzLmFkZFRpdGxlKCJMb29wcyIpOwogICAgICB2YXIgbG9vcEluZGV4ID0gMTsKCiAgICAgIHZhciBfaXRlcmF0b3I0ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZ3JhcGhMb29wcy5sb29wcyksCiAgICAgICAgICBfc3RlcDQ7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yNC5zKCk7ICEoX3N0ZXA0ID0gX2l0ZXJhdG9yNC5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgbG9vcCA9IF9zdGVwNC52YWx1ZTsKICAgICAgICAgIHRoaXMuYWRkTG9vcChsb29wLCBsb29wSW5kZXgrKyk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3I0LmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3I0LmYoKTsKICAgICAgfQogICAgfSwKICAgIGFkZFRpdGxlOiBmdW5jdGlvbiBhZGRUaXRsZSh0aXRsZVRleHQpIHsKICAgICAgdmFyIHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgIHRpdGxlLmNsYXNzTmFtZSA9ICJzb2x2ZS10aXRsZSI7CiAgICAgIHRpdGxlLmlubmVySFRNTCA9ICIiLmNvbmNhdCh0aXRsZVRleHQpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic3RlcHMiKS5hcHBlbmRDaGlsZCh0aXRsZSk7CiAgICB9LAogICAgYWRkUGF0aDogZnVuY3Rpb24gYWRkUGF0aChwYXRoU2VxLCBwYXRoSW5kZXgpIHsKICAgICAgdmFyIG4gPSBwYXRoU2VxLmxlbmd0aDsKICAgICAgdmFyIHBhdGggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgcGF0aC5pbm5lckhUTUwgPSAiUCA8c3ViPiIuY29uY2F0KHBhdGhJbmRleCwgIjwvc3ViPiA6ICIpOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuIC0gMTsgaSsrKSB7CiAgICAgICAgcGF0aC5pbm5lckhUTUwgKz0gIiIuY29uY2F0KHRoaXMuX2dldE5vZGVJbmRleChwYXRoU2VxW2ldKSwgIiAmcmFycjsgIik7CiAgICAgIH0KCiAgICAgIHBhdGguaW5uZXJIVE1MICs9ICIiLmNvbmNhdCh0aGlzLl9nZXROb2RlSW5kZXgocGF0aFNlcVtuIC0gMV0pKTsKICAgICAgcGF0aC5jbGFzc05hbWUgPSAicGF0aCI7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdGVwcyIpLmFwcGVuZENoaWxkKHBhdGgpOwogICAgfSwKICAgIGFkZExvb3A6IGZ1bmN0aW9uIGFkZExvb3AobG9vcFNlcSwgbG9vcEluZGV4KSB7CiAgICAgIHZhciBuID0gbG9vcFNlcS5sZW5ndGg7CiAgICAgIHZhciBsb29wID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgIGxvb3AuaW5uZXJIVE1MID0gIkwgPHN1Yj4iLmNvbmNhdChsb29wSW5kZXgsICI8L3N1Yj4gOiAiKTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbiAtIDE7IGkrKykgewogICAgICAgIGxvb3AuaW5uZXJIVE1MICs9ICIiLmNvbmNhdCh0aGlzLl9nZXROb2RlSW5kZXgobG9vcFNlcVtpXSksICIgJnJhcnI7ICIpOwogICAgICB9CgogICAgICBsb29wLmlubmVySFRNTCArPSAiIi5jb25jYXQodGhpcy5fZ2V0Tm9kZUluZGV4KGxvb3BTZXFbbiAtIDFdKSk7CiAgICAgIGxvb3AuY2xhc3NOYW1lID0gInBhdGgiOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic3RlcHMiKS5hcHBlbmRDaGlsZChsb29wKTsKICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgIE1hdGhKYXguSHViLlF1ZXVlKFsiVHlwZXNldCIsIE1hdGhKYXguSHViLCAiZWRpdG9yLW91dHB1dCJdKTsKICAgICAgfSk7CiAgICB9LAogICAgX2dldE5vZGVJbmRleDogZnVuY3Rpb24gX2dldE5vZGVJbmRleChub2RlQ29kZSkgewogICAgICB2YXIgbm9kZUluZGV4ID0gIiI7CiAgICAgIGlmIChub2RlQ29kZSA9PSAwKSBub2RlSW5kZXggPSAiUiI7ZWxzZSBpZiAobm9kZUNvZGUgPT0gdGhpcy5ub2RlTnVtIC0gMSkgbm9kZUluZGV4ID0gIkMiO2Vsc2Ugbm9kZUluZGV4ID0gbm9kZUNvZGU7CiAgICAgIHJldHVybiBub2RlSW5kZXg7CiAgICB9LAogICAgb3BlblNvbHV0aW9uQXJlYTogZnVuY3Rpb24gb3BlblNvbHV0aW9uQXJlYSgpIHsKICAgICAgdGhpcy4kcm9vdC4kcmVmcy5zb2x1dGlvbkFyZWEub3BlbigpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYm9hcmQiKS5zdHlsZS50cmFuc2Zvcm0gPSAic2NhbGUoMC41KSI7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJib2FyZCIpLnN0eWxlLmxlZnQgPSAiLTQwJSI7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["solveSection.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"solution\">\n    <div id=\"solve-btn\" @click=\"triggerSolve()\">Solve</div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { solveforwardpath } from \"../../solvingAlgo/forward_paths.js\";\nimport { findLoops } from \"../../solvingAlgo/loops.js\";\n\nexport default {\n  name: 'solve',\n  data() {\n    return {\n      nodeNum: 0,\n    }\n  },\n  computed: mapGetters(['nodes']),\n  head: {\n    script: [\n      { src: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-AMS_HTML' }\n    ]\n  },\n  methods: {\n    triggerSolve() {\n      // const graphInfo = this.getGraphInfo();\n      const graphInfo =  [[0,1,0,0,1,0,0,1,0],\n                          [0,0,1,0,0,0,1,0,1],\n                          [1,1,0,1,0,1,0,0,0],\n                          [0,0,0,0,1,0,0,0,0],\n                          [0,1,0,0,0,0,0,0,0],\n                          [0,0,0,1,0,0,0,0,0],\n                          [0,0,0,0,0,0,0,0,0],\n                          [0,0,0,0,0,0,0,0,1],\n                          [0,0,0,0,0,0,0,1,0]];\n\n      this.nodeNum = graphInfo.length;\n\n      const forwardPaths = solveforwardpath(graphInfo);\n      const loops = findLoops(graphInfo);\n      console.log(forwardPaths);\n      console.log(loops);\n\n      this.openSolutionArea();\n      this.showSolution(forwardPaths, loops);\n      document.getElementById(\"board\").style.pointerEvents = 'none';\n    },\n    getGraphInfo() {\n      const matrixSize = this.nodes.size;\n      const graphInfo = new Array(matrixSize);\n\n      for(let node of this.nodes.values()) {\n        node.unselectSelf();\n\n        const outcomingBranches = node.toConnectionPoint.outConnectors.values();\n        const node_nodeGains = new Array(matrixSize).fill(0);\n        let toNodeIndex = 0;\n        \n        for(let branch of outcomingBranches) {\n          if(branch.to.isOutputNode) toNodeIndex = matrixSize -1;\n          else toNodeIndex = branch.to.code;\n          node_nodeGains[toNodeIndex] = branch.gain;\n        }\n\n        let nodeIndex = 0;\n        if(node.isInputNode) nodeIndex = 0;\n        else if(node.isOutputNode) nodeIndex = matrixSize -1;\n        else nodeIndex = node.code;\n\n        graphInfo[nodeIndex] = node_nodeGains;\n      }\n\n      return graphInfo;\n    },\n    showSolution(forwardPaths, graphLoops){\n      document.getElementById(\"steps\").innerHTML = \"\";\n      this.addTitle(\"Forward paths:\");\n\n      let pathIndex = 1;\n      for(let path of forwardPaths.paths) {\n        this.addPath(path, pathIndex++);\n      }\n\n      this.addTitle(\"Loops\");\n\n      let loopIndex = 1;\n      for(let loop of graphLoops.loops) {\n        this.addLoop(loop, loopIndex++);\n      }\n    },\n    addTitle(titleText){\n      const title = document.createElement('div');\n      title.className = \"solve-title\";\n      title.innerHTML = `${titleText}`;\n      document.getElementById(\"steps\").appendChild(title);\n    },\n    addPath(pathSeq, pathIndex) {\n      const n = pathSeq.length;\n      let path = document.createElement('div');\n      path.innerHTML = `P <sub>${pathIndex}</sub> : `;\n\n      for(let i = 0; i < n -1; i++) {\n        path.innerHTML += `${this._getNodeIndex(pathSeq[i])} &rarr; `;\n      }\n      path.innerHTML += `${this._getNodeIndex(pathSeq[n-1])}`;\n\n      path.className = \"path\";\n      document.getElementById(\"steps\").appendChild(path);\n    },\n    addLoop(loopSeq, loopIndex) {\n      const n = loopSeq.length;\n      let loop = document.createElement('div');\n      loop.innerHTML = `L <sub>${loopIndex}</sub> : `;\n\n      for(let i = 0; i < n -1; i++) {\n        loop.innerHTML += `${this._getNodeIndex(loopSeq[i])} &rarr; `;\n      }\n      loop.innerHTML += `${this._getNodeIndex(loopSeq[n-1])}`;\n\n      loop.className = \"path\";\n      document.getElementById(\"steps\").appendChild(loop);\n\n      this.$nextTick(function() {\n        MathJax.Hub.Queue([\"Typeset\",MathJax.Hub,\"editor-output\"])\n      })\n    },\n    _getNodeIndex(nodeCode) {\n      let nodeIndex = \"\";\n      if(nodeCode == 0) nodeIndex = \"R\";\n      else if(nodeCode == this.nodeNum-1) nodeIndex = \"C\";\n      else nodeIndex = nodeCode;\n\n      return nodeIndex;\n    },\n    openSolutionArea() {\n      this.$root.$refs.solutionArea.open();\n      document.getElementById(\"board\").style.transform = \"scale(0.5)\";\n      document.getElementById(\"board\").style.left = \"-40%\";\n    }\n  },\n}\n</script>\n\n<style scoped>\n#solution {\n  height: 100%;\n  width: 10rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#solve-btn { \n  background-color: rgb(30, 89, 202);\n  border-radius: 0.5rem;\n  height: 2rem;\n  width: 6rem;\n\n  text-align: center;\n  vertical-align: center;\n  line-height: 2rem;\n\n  color: white;\n  user-select: none;\n}\n</style>"],"sourceRoot":"src/components/header"}]}