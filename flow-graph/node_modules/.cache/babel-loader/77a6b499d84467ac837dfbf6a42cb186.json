{"remainingRequest":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/babel-loader/lib/index.js!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/src/components/header/simulationSection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/src/components/header/simulationSection.vue","mtime":1610627764340},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["simulationSection.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"simulation\">\n    <div id=\"num-label\">Number of products</div>\n    <input type=\"number\" id=\"products-input\" placeholder=\"20\" v-model=\"productsNumber\">\n    <div id=\"start-end-btn\" :class=\"['sim-btn', setStartEndBtn()]\" @click=\"TriggerSimulation()\">{{startEndBtnText}}</div>\n    <div id=\"replay-btn\" class=\"hidden\" @click=\"toggleReplay()\">\n      {{replayText}}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters ,mapActions } from 'vuex';\nimport axios from 'axios';\n\nexport default {\n  name: 'simulation',\n  data() {\n    return {\n      start: true,\n      productsNumber: 20,\n      startEndBtnText: \"start simulation\",\n      replayText: \"repaly\",\n      simulationFinished: false,\n      replayBtnStatus: 'hidden',\n      seconds: 1,\n      replayFinished: false,\n      replayRunning: false,\n    }\n  },\n  computed: mapGetters(['queues', 'machines', 'getErrorCard']),\n  methods: {\n    ...mapActions(['setErrorMsg']),\n    toggleStartEnd() {\n      this.start = !this.start;\n      this.setStartEndBtn();\n    },\n    setStartEndBtn() {\n      if(!this.start) {\n        this.startEndBtnText = \"end simulation\";\n        return \"end-btn\";\n      }\n      else {\n        this.startEndBtnText = \"start simulation\";\n        return \"start-btn\";\n      }\n    },\n    showReplayBtn() {\n      document.getElementById(\"replay-btn\").className = 'sim-btn';\n    },\n    hideReplayBtn() {\n      document.getElementById(\"replay-btn\").className = 'hidden';\n    },\n    TriggerSimulation() {\n      if(this.start && !this.isValidCircuit()) return;\n      this.toggleStartEnd();\n      if(!this.start) {\n        const queuesJson = this.getQueuesInfo();\n        const machinesJson = this.getMachinesInfo();\n        const productsNumber = this.getProductsNumber();\n\n        this.disableInput();\n        document.getElementById(\"board\").style.pointerEvents = 'none';\n\n        this.startSimulation(machinesJson, queuesJson, productsNumber);\n      }\n      else {\n        this.endSimulation();\n      }\n    },\n    //requests helper methods\n    startSimulation(machinesJson, queuesJson, productsNumber) {\n      this.hideReplayBtn();\n      this.resetAllMachines();\n      this.resetAllQueues();\n      this.simulationFinished = false;\n      this.replayFinished = false;\n      this.seconds = 0;\n\n      axios.post('http://localhost:8085//startSimulation', null, \n        {params :{\n          jsonMachines: machinesJson,\n          jsonQueues: queuesJson,\n          numberOfProducts: productsNumber,\n        }})\n        .then( () => {\n          const tracker = setInterval(() => {\n            if(this.simulationFinished) {\n              setTimeout(() => {\n                this.refreshCircuit();\n                clearInterval(tracker);\n                this.showReplayBtn();\n                this.toggleStartEnd();\n              }, 500);\n            }\n\n            else {\n              this.refreshCircuit();\n              this.seconds ++;\n            }\n          }, 1000);\n        })\n        .catch( (error) => console.log(error));\n    },\n    //replay\n    toggleReplay() {\n      if(!this.replayRunning) {\n        this.replay();\n        this.replayText = \"end replay\";\n      }\n      else {\n        this.endReplay();\n        this.replayText = \"replay\";\n      }\n      this.replayRunning = !this.replayRunning;\n    },\n    replay() {\n      this.resetAllMachines();\n      this.resetAllQueues();\n      let currSecond = 1;\n      this.replayFinished = false;\n\n      this.disableInput();\n      document.getElementById(\"board\").style.pointerEvents = 'none';\n      \n      const replayTracker = setInterval(() => {\n        if(currSecond > this.seconds || this.replayFinished) {\n          this.endReplay();\n      \n          clearInterval(replayTracker);\n        }\n        else {\n          axios.get('http://localhost:8085//replay', \n          {params: {\n            second: currSecond ++,\n          }})\n          .then( (response) => {\n            this.updateCircuit(response.data);\n          })\n          .catch( (error) => console.log(error));\n        }\n      }, 1000);\n    },\n    endReplay() {\n      this.replayFinished = true;\n      document.getElementById(\"board\").style.pointerEvents = 'auto';\n      this.productsNumber = 20;\n      this.enableInput();\n      this.replayRunning = false;\n      this.replayText = 'replay';\n    },\n    isSimulationOver() {\n      axios.get('http://localhost:8085//isSimulationFinished')\n      .then( (response) => {\n        const isSimulationFinished = response.data;\n        if(isSimulationFinished) {\n          this.endSimulation();\n        }\n      })\n      .catch( (error) => console.log(error));\n    },\n    refreshCircuit() {\n      axios.get('http://localhost:8085//getCurrentImage')\n      .then( (response) => {\n        this.updateCircuit(response.data);\n\n        this.isSimulationOver();\n      })\n      .catch( (error) => console.log(error));\n    },\n    updateCircuit(circuitInfo) {\n      const machinesInfo = circuitInfo.machines;\n      const queuesInfo = circuitInfo.queues;\n      const currNumberOfProducts = circuitInfo.productsNum;\n      this.updateMachines(machinesInfo);\n      this.updateQueues(queuesInfo);\n      this.updateNumberOfProducts(currNumberOfProducts);    \n    },\n    updateNumberOfProducts(numberOfProducts) {\n      this.productsNumber = numberOfProducts;\n    },\n    endSimulation() {\n      this.simulationFinished = true;\n      document.getElementById(\"board\").style.pointerEvents = 'auto';\n      this.productsNumber = 20;\n      this.enableInput();\n    },\n    resetAllMachines() {\n      for(let machine of this.machines.values()){\n        machine.resetColor();\n      }\n    },\n    resetAllQueues() {\n      for(let queue of this.queues.values()){\n        queue.resetCount();\n      }\n    },\n    //parsing machines info\n    updateMachines(machinesInfo) {\n      for(let machine of machinesInfo){\n        const machineId = machine.id;\n        const updatedMachineColor = machine.color;\n        const currentMachine = this.machines.get(machineId);\n\n        const oldColor = currentMachine.fillColor;\n        currentMachine.updateFillColor(updatedMachineColor);\n        if(oldColor != updatedMachineColor && oldColor != \"rgb(187,143,206)\") currentMachine.flash(oldColor)\n      }\n    },\n    updateQueues(queuesInfo) {\n      for(let queue of queuesInfo) {\n        const queueId = queue.id;\n        const queueSize = queue.numberOfProducts;\n        const currentQueue = this.queues.get(queueId);\n        currentQueue.updateProductsNumber(queueSize);\n      }\n    },\n    isValidCircuit() {\n      // any queue except the starting queue must have a least one input\n      for(let queue of this.queues.values()) {\n        if(!queue.isStartingQueue && queue.fromConnectionPoint.inConnectors.size == 0) {\n          this.setErrorMsg(`Q${queue.code} has no input lines`);\n          this.getErrorCard.showErrorMsg();\n          return false;\n        }\n      }\n      // any machine must have exactly one output and at least one input\n      for(let machine of this.machines.values()) {\n        if(machine.fromConnectionPoint.inConnectors.size == 0) {\n          this.setErrorMsg(`M${machine.code} has no input lines`);\n          this.getErrorCard.showErrorMsg();\n          return false;\n        }\n\n        if(machine.toConnectionPoint.outConnectors.size == 0) {\n          this.setErrorMsg(`M${machine.code} has no output lines`);\n          this.getErrorCard.showErrorMsg();\n          return false;\n        }\n      }\n\n      if(this.productsNumber == \"\") {\n        this.setErrorMsg(`products number cannot be empty`);\n        this.getErrorCard.showErrorMsg();\n        return false;\n      }\n\n      if(this.productsNumber == 0) {\n        this.setErrorMsg(`products number cannot be 0`);\n        this.getErrorCard.showErrorMsg();\n        return false;\n      }\n\n      return true;\n    },\n    getQueuesInfo() {\n      const allQueuesInfo = [];\n      for(let queue of this.queues.values()) {\n        queue.unselectSelf();\n        if(queue.isEndQueue()) allQueuesInfo.push(new this.QueueInfo(queue.code, true));\n        else allQueuesInfo.push(new this.QueueInfo(queue.code, false));\n      }\n\n      return JSON.stringify(allQueuesInfo);\n    },\n    getMachinesInfo() {\n      const allMahinesInfo = [];\n      for(let machine of this.machines.values()) {\n        machine.unselectSelf();\n        const fromQueues = machine.fromConnectionPoint.fromComponents.values();\n        const fromQueuesIds = [];\n        for(let queue of fromQueues) fromQueuesIds.push(queue.code);\n\n        const toQueue = machine.toConnectionPoint.outConnectors.values().next().value.to.code;\n        allMahinesInfo.push(new this.MachinesInfo(machine.code, fromQueuesIds, toQueue))\n      }\n\n      return JSON.stringify(allMahinesInfo);\n    },\n    getProductsNumber() {\n      return Math.trunc(+this.productsNumber);\n    },\n    disableInput() {\n      document.getElementById(\"products-input\").disabled = true;\n    },\n    enableInput() {\n      document.getElementById(\"products-input\").disabled = false;\n    },\n    //helper\n    QueueInfo(id, isEndQueue) {\n      return {\n        ID: id,\n        isEndQueue: isEndQueue,\n      }\n    },\n    MachinesInfo(id, fromQueues, toQueue) {\n      return {\n        ID: id,\n        fromQueues: fromQueues,\n        toQueue: toQueue,\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n#simulation {\n  height: 100%;\n  display: grid;\n  grid-template-rows: repeat(2, 2.5rem);\n  grid-template-columns: repeat(5, 4rem);\n  justify-items: center;\n  align-items: center;\n  justify-content: center;\n  align-content: center;\n  margin-left: 3rem;\n}\n#num-label {\n  height: 2.2rem;\n  width: 90%;\n  text-align: center;\n  vertical-align: middle;\n  line-height: 2.2rem;\n  color: black;\n  user-select: none;\n\n  grid-row: 1 / 2;\n  grid-column: 1 / 4;\n}\n\n#products-input {\n  box-sizing: border-box;\n  border: 1px solid black;\n  border-radius: 0.5rem;\n  width: 90%;\n  height: 2rem;\n  grid-row: 1 / 2;\n  grid-column: 4 / 6;\n  padding-left: 0.5rem;\n  font-size: medium;\n}\n#products-input::-webkit-outer-spin-button,\n#products-input::-webkit-inner-spin-button {\n  -webkit-appearance: none !important;\n  margin: 0 !important;\n}\n\ninput[type=number]:focus {\n  outline-style: none;\n  border: 2px solid black;\n  border-radius: 0.5rem;\n}\n\n.icon {\n  border: 1px solid #212F3D;\n  grid-row: 1 / 2;\n  grid-column: 1/2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.sim-btn {\n  height: 2rem;\n  width: 80%;\n  text-align: center;\n  vertical-align: middle;\n  line-height: 2rem;\n  user-select: none;\n  border-radius: 0.5rem;\n  grid-row: 2 / 3;\n}\n\n#start-end-btn { \n  grid-column: 1 / 4;\n}\n\n.start-btn {\n  background-color: #16A085;\n}\n\n.end-btn {\n  background-color: #E74C3C;\n}\n\n.hidden {\n  visibility: hidden;\n  display: none;\n}\n.visible {\n  visibility: visible;\n  display: flex;\n}\n\n#replay-btn { \n  background-color: #F4D03F;\n  grid-column: 4 / 6;\n}\n</style>"],"sourceRoot":"src/components/header"}]}