{"remainingRequest":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/src/components/header/solveSection.vue?vue&type=style&index=0&id=545c6008&scoped=true&lang=css&","dependencies":[{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/src/components/header/solveSection.vue","mtime":1619295391564},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI3NvbHV0aW9uIHsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6IDEwcmVtOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQoKI3NvbHZlLWJ0biB7IAogIGJhY2tncm91bmQtY29sb3I6IHJnYigzMCwgODksIDIwMik7CiAgYm9yZGVyLXJhZGl1czogMC41cmVtOwogIGhlaWdodDogMnJlbTsKICB3aWR0aDogNnJlbTsKCiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7CiAgbGluZS1oZWlnaHQ6IDJyZW07CgogIGNvbG9yOiB3aGl0ZTsKICB1c2VyLXNlbGVjdDogbm9uZTsKfQoKLnRpdGxlIHsKICBtYXJnaW4tbGVmdDogMXJlbTsKICBtYXJnaW4tdG9wOiAxcmVtOwp9Cg=="},{"version":3,"sources":["solveSection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"solveSection.vue","sourceRoot":"src/components/header","sourcesContent":["<template>\n  <div id=\"solution\">\n    <div id=\"solve-btn\" @click=\"triggerSolve()\">Solve</div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { solveforwardpath } from \"../../solvingAlgo/forward_paths.js\";\n\nexport default {\n  name: 'solve',\n  data() {\n    return {\n    }\n  },\n  computed: mapGetters(['nodes']),\n  methods: {\n    triggerSolve() {\n      const graphInfo = this.getGraphInfo();\n      const forwardPaths = solveforwardpath(graphInfo);\n      this.openSolutionArea();\n      this.showSolution(forwardPaths);\n      document.getElementById(\"board\").style.pointerEvents = 'none';\n    },\n    getGraphInfo() {\n      const matrixSize = this.nodes.size;\n      const graphInfo = new Array(matrixSize);\n\n      for(let node of this.nodes.values()) {\n        node.unselectSelf();\n\n        const outcomingBranches = node.toConnectionPoint.outConnectors.values();\n        const node_nodeGains = new Array(matrixSize).fill(0);\n        let toNodeIndex = 0;\n        \n        for(let branch of outcomingBranches) {\n          if(branch.to.isOutputNode) toNodeIndex = matrixSize -1;\n          else toNodeIndex = branch.to.code;\n          node_nodeGains[toNodeIndex] = branch.gain;\n        }\n\n        let nodeIndex = 0;\n        if(node.isInputNode) nodeIndex = 0;\n        else if(node.isOutputNode) nodeIndex = matrixSize -1;\n        else nodeIndex = node.code;\n\n        graphInfo[nodeIndex] = node_nodeGains;\n      }\n\nreturn graphInfo;\n    },\n    showSolution(forwardPaths){\n      this.addTitle(\"Forward paths:\");\n      console.log(forwardPaths);\n    },\n    addTitle(titleText){\n      const title = document.createElement('vue-mathjax');\n      title.className = \"title\";\n      title.innerHTML = `$$\\\\text{${titleText}}$$`;\n      document.getElementById(\"solution-area\").appendChild(title);\n    },\n    openSolutionArea() {\n      this.$root.$refs.solutionArea.open();\n      document.getElementById(\"board\").style.transform = \"scale(0.5)\";\n      document.getElementById(\"board\").style.left = \"-40%\";\n    }\n  },\n}\n</script>\n\n<style scoped>\n#solution {\n  height: 100%;\n  width: 10rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#solve-btn { \n  background-color: rgb(30, 89, 202);\n  border-radius: 0.5rem;\n  height: 2rem;\n  width: 6rem;\n\n  text-align: center;\n  vertical-align: center;\n  line-height: 2rem;\n\n  color: white;\n  user-select: none;\n}\n\n.title {\n  margin-left: 1rem;\n  margin-top: 1rem;\n}\n</style>"]}]}