{"remainingRequest":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/src/components/header/solveSection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/src/components/header/solveSection.vue","mtime":1619563165880},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/Control_Systems/signal-flow-graph-solver/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgc29sdmVmb3J3YXJkcGF0aCB9IGZyb20gIi4uLy4uL3NvbHZpbmdBbGdvL2ZvcndhcmRfcGF0aHMuanMiOwppbXBvcnQgeyBmaW5kTG9vcHMgfSBmcm9tICIuLi8uLi9zb2x2aW5nQWxnby9sb29wcy5qcyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3NvbHZlJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbm9kZU51bTogMCwKICAgIH0KICB9LAogIGNvbXB1dGVkOiBtYXBHZXR0ZXJzKFsnbm9kZXMnXSksCiAgaGVhZDogewogICAgc2NyaXB0OiBbCiAgICAgIHsgc3JjOiAnaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvbWF0aGpheC8yLjcuMi9NYXRoSmF4LmpzP2NvbmZpZz1UZVgtQU1TX0hUTUwnIH0KICAgIF0KICB9LAogIG1ldGhvZHM6IHsKICAgIHRyaWdnZXJTb2x2ZSgpIHsKICAgICAgLy8gY29uc3QgZ3JhcGhJbmZvID0gdGhpcy5nZXRHcmFwaEluZm8oKTsKICAgICAgY29uc3QgZ3JhcGhJbmZvID0gIFtbMCwxLDAsMCwxLDAsMCwxLDBdLAogICAgICAgICAgICAgICAgICAgICAgICAgIFswLDAsMSwwLDAsMCwxLDAsMV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgWzEsMSwwLDEsMCwxLDAsMCwwXSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbMCwwLDAsMCwxLDAsMCwwLDBdLAogICAgICAgICAgICAgICAgICAgICAgICAgIFswLDEsMCwwLDAsMCwwLDAsMF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgWzAsMCwwLDEsMCwwLDAsMCwwXSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbMCwwLDAsMCwwLDAsMCwwLDBdLAogICAgICAgICAgICAgICAgICAgICAgICAgIFswLDAsMCwwLDAsMCwwLDAsMV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgWzAsMCwwLDAsMCwwLDAsMSwwXV07CgogICAgICB0aGlzLm5vZGVOdW0gPSBncmFwaEluZm8ubGVuZ3RoOwoKICAgICAgY29uc3QgZm9yd2FyZFBhdGhzID0gc29sdmVmb3J3YXJkcGF0aChncmFwaEluZm8pOwogICAgICBjb25zdCBsb29wcyA9IGZpbmRMb29wcyhncmFwaEluZm8pOwogICAgICBjb25zb2xlLmxvZyhmb3J3YXJkUGF0aHMpOwogICAgICBjb25zb2xlLmxvZyhsb29wcyk7CgogICAgICB0aGlzLm9wZW5Tb2x1dGlvbkFyZWEoKTsKICAgICAgdGhpcy5zaG93U29sdXRpb24oZm9yd2FyZFBhdGhzLCBsb29wcyk7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJib2FyZCIpLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnbm9uZSc7CiAgICB9LAogICAgZ2V0R3JhcGhJbmZvKCkgewogICAgICBjb25zdCBtYXRyaXhTaXplID0gdGhpcy5ub2Rlcy5zaXplOwogICAgICBjb25zdCBncmFwaEluZm8gPSBuZXcgQXJyYXkobWF0cml4U2l6ZSk7CgogICAgICBmb3IobGV0IG5vZGUgb2YgdGhpcy5ub2Rlcy52YWx1ZXMoKSkgewogICAgICAgIG5vZGUudW5zZWxlY3RTZWxmKCk7CgogICAgICAgIGNvbnN0IG91dGNvbWluZ0JyYW5jaGVzID0gbm9kZS50b0Nvbm5lY3Rpb25Qb2ludC5vdXRDb25uZWN0b3JzLnZhbHVlcygpOwogICAgICAgIGNvbnN0IG5vZGVfbm9kZUdhaW5zID0gbmV3IEFycmF5KG1hdHJpeFNpemUpLmZpbGwoMCk7CiAgICAgICAgbGV0IHRvTm9kZUluZGV4ID0gMDsKICAgICAgICAKICAgICAgICBmb3IobGV0IGJyYW5jaCBvZiBvdXRjb21pbmdCcmFuY2hlcykgewogICAgICAgICAgaWYoYnJhbmNoLnRvLmlzT3V0cHV0Tm9kZSkgdG9Ob2RlSW5kZXggPSBtYXRyaXhTaXplIC0xOwogICAgICAgICAgZWxzZSB0b05vZGVJbmRleCA9IGJyYW5jaC50by5jb2RlOwogICAgICAgICAgbm9kZV9ub2RlR2FpbnNbdG9Ob2RlSW5kZXhdID0gYnJhbmNoLmdhaW47CiAgICAgICAgfQoKICAgICAgICBsZXQgbm9kZUluZGV4ID0gMDsKICAgICAgICBpZihub2RlLmlzSW5wdXROb2RlKSBub2RlSW5kZXggPSAwOwogICAgICAgIGVsc2UgaWYobm9kZS5pc091dHB1dE5vZGUpIG5vZGVJbmRleCA9IG1hdHJpeFNpemUgLTE7CiAgICAgICAgZWxzZSBub2RlSW5kZXggPSBub2RlLmNvZGU7CgogICAgICAgIGdyYXBoSW5mb1tub2RlSW5kZXhdID0gbm9kZV9ub2RlR2FpbnM7CiAgICAgIH0KCiAgICAgIHJldHVybiBncmFwaEluZm87CiAgICB9LAogICAgc2hvd1NvbHV0aW9uKGZvcndhcmRQYXRocywgZ3JhcGhMb29wcyl7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdGVwcyIpLmlubmVySFRNTCA9ICIiOwogICAgICB0aGlzLmFkZFRpdGxlKCJGb3J3YXJkIHBhdGhzOiIpOwoKICAgICAgbGV0IHBhdGhJbmRleCA9IDE7CiAgICAgIGZvcihsZXQgcGF0aCBvZiBmb3J3YXJkUGF0aHMucGF0aHMpIHsKICAgICAgICB0aGlzLmFkZFBhdGgocGF0aCwgcGF0aEluZGV4KyspOwogICAgICB9CgogICAgICB0aGlzLmFkZFRpdGxlKCJMb29wcyIpOwoKICAgICAgbGV0IGxvb3BJbmRleCA9IDE7CiAgICAgIGZvcihsZXQgbG9vcCBvZiBncmFwaExvb3BzLmxvb3BzKSB7CiAgICAgICAgdGhpcy5hZGRMb29wKGxvb3AsIGxvb3BJbmRleCsrKTsKICAgICAgfQogICAgfSwKICAgIGFkZFRpdGxlKHRpdGxlVGV4dCl7CiAgICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgIHRpdGxlLmNsYXNzTmFtZSA9ICJzb2x2ZS10aXRsZSI7CiAgICAgIHRpdGxlLmlubmVySFRNTCA9IGAke3RpdGxlVGV4dH1gOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic3RlcHMiKS5hcHBlbmRDaGlsZCh0aXRsZSk7CiAgICB9LAogICAgYWRkUGF0aChwYXRoU2VxLCBwYXRoSW5kZXgpIHsKICAgICAgY29uc3QgbiA9IHBhdGhTZXEubGVuZ3RoOwogICAgICBsZXQgcGF0aCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAgICBwYXRoLmlubmVySFRNTCA9IGBQIDxzdWI+JHtwYXRoSW5kZXh9PC9zdWI+IDogYDsKCiAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBuIC0xOyBpKyspIHsKICAgICAgICBwYXRoLmlubmVySFRNTCArPSBgJHt0aGlzLl9nZXROb2RlSW5kZXgocGF0aFNlcVtpXSl9ICZyYXJyOyBgOwogICAgICB9CiAgICAgIHBhdGguaW5uZXJIVE1MICs9IGAke3RoaXMuX2dldE5vZGVJbmRleChwYXRoU2VxW24tMV0pfWA7CgogICAgICBwYXRoLmNsYXNzTmFtZSA9ICJwYXRoIjsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInN0ZXBzIikuYXBwZW5kQ2hpbGQocGF0aCk7CiAgICB9LAogICAgYWRkTG9vcChsb29wU2VxLCBsb29wSW5kZXgpIHsKICAgICAgY29uc3QgbiA9IGxvb3BTZXEubGVuZ3RoOwogICAgICBsZXQgbG9vcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAgICBsb29wLmlubmVySFRNTCA9IGBMIDxzdWI+JHtsb29wSW5kZXh9PC9zdWI+IDogYDsKCiAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBuIC0xOyBpKyspIHsKICAgICAgICBsb29wLmlubmVySFRNTCArPSBgJHt0aGlzLl9nZXROb2RlSW5kZXgobG9vcFNlcVtpXSl9ICZyYXJyOyBgOwogICAgICB9CiAgICAgIGxvb3AuaW5uZXJIVE1MICs9IGAke3RoaXMuX2dldE5vZGVJbmRleChsb29wU2VxW24tMV0pfWA7CgogICAgICBsb29wLmNsYXNzTmFtZSA9ICJwYXRoIjsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInN0ZXBzIikuYXBwZW5kQ2hpbGQobG9vcCk7CgogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpIHsKICAgICAgICBNYXRoSmF4Lkh1Yi5RdWV1ZShbIlR5cGVzZXQiLE1hdGhKYXguSHViLCJlZGl0b3Itb3V0cHV0Il0pCiAgICAgIH0pCiAgICB9LAogICAgX2dldE5vZGVJbmRleChub2RlQ29kZSkgewogICAgICBsZXQgbm9kZUluZGV4ID0gIiI7CiAgICAgIGlmKG5vZGVDb2RlID09IDApIG5vZGVJbmRleCA9ICJSIjsKICAgICAgZWxzZSBpZihub2RlQ29kZSA9PSB0aGlzLm5vZGVOdW0tMSkgbm9kZUluZGV4ID0gIkMiOwogICAgICBlbHNlIG5vZGVJbmRleCA9IG5vZGVDb2RlOwoKICAgICAgcmV0dXJuIG5vZGVJbmRleDsKICAgIH0sCiAgICBvcGVuU29sdXRpb25BcmVhKCkgewogICAgICB0aGlzLiRyb290LiRyZWZzLnNvbHV0aW9uQXJlYS5vcGVuKCk7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJib2FyZCIpLnN0eWxlLnRyYW5zZm9ybSA9ICJzY2FsZSgwLjUpIjsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImJvYXJkIikuc3R5bGUubGVmdCA9ICItNDAlIjsKICAgIH0KICB9LAp9Cg=="},{"version":3,"sources":["solveSection.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"solveSection.vue","sourceRoot":"src/components/header","sourcesContent":["<template>\n  <div id=\"solution\">\n    <div id=\"solve-btn\" @click=\"triggerSolve()\">Solve</div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { solveforwardpath } from \"../../solvingAlgo/forward_paths.js\";\nimport { findLoops } from \"../../solvingAlgo/loops.js\";\n\nexport default {\n  name: 'solve',\n  data() {\n    return {\n      nodeNum: 0,\n    }\n  },\n  computed: mapGetters(['nodes']),\n  head: {\n    script: [\n      { src: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-AMS_HTML' }\n    ]\n  },\n  methods: {\n    triggerSolve() {\n      // const graphInfo = this.getGraphInfo();\n      const graphInfo =  [[0,1,0,0,1,0,0,1,0],\n                          [0,0,1,0,0,0,1,0,1],\n                          [1,1,0,1,0,1,0,0,0],\n                          [0,0,0,0,1,0,0,0,0],\n                          [0,1,0,0,0,0,0,0,0],\n                          [0,0,0,1,0,0,0,0,0],\n                          [0,0,0,0,0,0,0,0,0],\n                          [0,0,0,0,0,0,0,0,1],\n                          [0,0,0,0,0,0,0,1,0]];\n\n      this.nodeNum = graphInfo.length;\n\n      const forwardPaths = solveforwardpath(graphInfo);\n      const loops = findLoops(graphInfo);\n      console.log(forwardPaths);\n      console.log(loops);\n\n      this.openSolutionArea();\n      this.showSolution(forwardPaths, loops);\n      document.getElementById(\"board\").style.pointerEvents = 'none';\n    },\n    getGraphInfo() {\n      const matrixSize = this.nodes.size;\n      const graphInfo = new Array(matrixSize);\n\n      for(let node of this.nodes.values()) {\n        node.unselectSelf();\n\n        const outcomingBranches = node.toConnectionPoint.outConnectors.values();\n        const node_nodeGains = new Array(matrixSize).fill(0);\n        let toNodeIndex = 0;\n        \n        for(let branch of outcomingBranches) {\n          if(branch.to.isOutputNode) toNodeIndex = matrixSize -1;\n          else toNodeIndex = branch.to.code;\n          node_nodeGains[toNodeIndex] = branch.gain;\n        }\n\n        let nodeIndex = 0;\n        if(node.isInputNode) nodeIndex = 0;\n        else if(node.isOutputNode) nodeIndex = matrixSize -1;\n        else nodeIndex = node.code;\n\n        graphInfo[nodeIndex] = node_nodeGains;\n      }\n\n      return graphInfo;\n    },\n    showSolution(forwardPaths, graphLoops){\n      document.getElementById(\"steps\").innerHTML = \"\";\n      this.addTitle(\"Forward paths:\");\n\n      let pathIndex = 1;\n      for(let path of forwardPaths.paths) {\n        this.addPath(path, pathIndex++);\n      }\n\n      this.addTitle(\"Loops\");\n\n      let loopIndex = 1;\n      for(let loop of graphLoops.loops) {\n        this.addLoop(loop, loopIndex++);\n      }\n    },\n    addTitle(titleText){\n      const title = document.createElement('div');\n      title.className = \"solve-title\";\n      title.innerHTML = `${titleText}`;\n      document.getElementById(\"steps\").appendChild(title);\n    },\n    addPath(pathSeq, pathIndex) {\n      const n = pathSeq.length;\n      let path = document.createElement('div');\n      path.innerHTML = `P <sub>${pathIndex}</sub> : `;\n\n      for(let i = 0; i < n -1; i++) {\n        path.innerHTML += `${this._getNodeIndex(pathSeq[i])} &rarr; `;\n      }\n      path.innerHTML += `${this._getNodeIndex(pathSeq[n-1])}`;\n\n      path.className = \"path\";\n      document.getElementById(\"steps\").appendChild(path);\n    },\n    addLoop(loopSeq, loopIndex) {\n      const n = loopSeq.length;\n      let loop = document.createElement('div');\n      loop.innerHTML = `L <sub>${loopIndex}</sub> : `;\n\n      for(let i = 0; i < n -1; i++) {\n        loop.innerHTML += `${this._getNodeIndex(loopSeq[i])} &rarr; `;\n      }\n      loop.innerHTML += `${this._getNodeIndex(loopSeq[n-1])}`;\n\n      loop.className = \"path\";\n      document.getElementById(\"steps\").appendChild(loop);\n\n      this.$nextTick(function() {\n        MathJax.Hub.Queue([\"Typeset\",MathJax.Hub,\"editor-output\"])\n      })\n    },\n    _getNodeIndex(nodeCode) {\n      let nodeIndex = \"\";\n      if(nodeCode == 0) nodeIndex = \"R\";\n      else if(nodeCode == this.nodeNum-1) nodeIndex = \"C\";\n      else nodeIndex = nodeCode;\n\n      return nodeIndex;\n    },\n    openSolutionArea() {\n      this.$root.$refs.solutionArea.open();\n      document.getElementById(\"board\").style.transform = \"scale(0.5)\";\n      document.getElementById(\"board\").style.left = \"-40%\";\n    }\n  },\n}\n</script>\n\n<style scoped>\n#solution {\n  height: 100%;\n  width: 10rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#solve-btn { \n  background-color: rgb(30, 89, 202);\n  border-radius: 0.5rem;\n  height: 2rem;\n  width: 6rem;\n\n  text-align: center;\n  vertical-align: center;\n  line-height: 2rem;\n\n  color: white;\n  user-select: none;\n}\n</style>"]}]}